Test cases for BaseGeometry.integer_validator

integer_validator takes two arguments, name and value
value must be an integer, raises TypeError if value is not an integer

    >>> BaseGeometry = __import__("7-base_geometry").BaseGeometry
    >>> bg = BaseGeometry()
    >>> try:
    ...     bg.integer_validator("my_int", 12)
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
    >>> try:
    ...     bg.integer_validator("name", "john")
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
    [TypeError] name must be an integer

value must be greater than 0, raises ValueError if value is not greater than 0

    >>> try:
    ...     bg.integer_validator("age", 0)
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
    [ValueError] age must be greater than 0
    >>> try:
    ...     bg.integer_validator("age", -5)
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
    [ValueError] age must be greater than 0
    >>> try:
    ...     bg.integer_validator("age", 10)
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
